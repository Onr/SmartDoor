/*jslint node:true, vars:true, bitwise:true, unparam:true */
/*jshint unused:true */
/*global */

//a node.js application to detect Knocks on the door




/*
A simple node.js application intended to read data from Analog pins on the Intel based development boards such as the Intel(R) Galileo and Edison with Arduino breakout board.
MRAA - Low Level Skeleton Library for Communication on GNU/Linux platforms
Library in C/C++ to interface with Galileo & other Intel platforms, in a structured and sane API with port nanmes/numbering that match boards & with bindings to javascript & python.
Steps for installing MRAA & UPM Library on Intel IoT Platform with IoTDevKit Linux* image
Using a ssh client: 
1. echo "src maa-upm http://iotdk.intel.com/repos/1.1/intelgalactic" > /etc/opkg/intel-iotdk.conf
2. opkg update
3. opkg upgrade
Article: https://software.intel.com/en-us/html5/articles/intel-xdk-iot-edition-nodejs-templates
*/

var mraa = require('mraa'); //require mraa
console.log('MRAA Version: ' + mraa.getVersion()); //write the mraa version to the console

var thrashold=20; //the sensitivity can be adjust with the resistor on the microphone 
var numberOfKnoks=3;
var maxIntervalTimeBtweenKnoks=1000
var minIntervalTimeBtweenKnoks=300
var lastTime=0;
var couter=0;
var analogPin1 = new mraa.Aio(1); //setup access analog input Analog pin #0 (A0)


setInterval(function () {
var analogValue = analogPin1.read(); //read the value of the analog pin
//console.log(analogValue); //write the value of the analog pin to the console


if (analogValue> thrashold) {
    
    var currentTime = Date.now();
  //  console.log("knock  at time : %d",currentTime);
//    console.log("interval between knocks is: %d",(currentTime-lastTime));
    if  ((currentTime-lastTime)>maxIntervalTimeBtweenKnoks){couter=0;lastTime=currentTime;return;}
    if ((currentTime-lastTime)< minIntervalTimeBtweenKnoks){return;}
    couter++;
    console.log("the couter is  is: %d",couter);

    lastTime=currentTime;
    if (couter==numberOfKnoks){
       console.log("knock Detected");
        couter=0;
 
}
    
}
   },1); 


